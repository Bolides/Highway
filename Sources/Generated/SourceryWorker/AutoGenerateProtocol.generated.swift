// Generated using Sourcery 0.15.0 — https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

//: Do not change this code as it is autogenerated every time you build.
//: You can change the code in `../StencilTemplatesForSourcery/Application/AutoGenerateProtocol
import Foundation

// MARK: - AutoGenerateProtocol

//: From all Types implementing this protocol Sourcery adds:
//: - public/internal variables // private variables are ignored
//: - public/internal methods (skips initializers)
//: - initializers marked with annotation // sourcery:includeInitInProtocol
//: - of the above it does not add it if  // sourcery:skipProtocol
//: ---

// version 5.5
/*

 // types.implementing.AutoGenerateProtocol inline for Sourcery ..
 // sourcery:inline:Sourcery.AutoGenerateProtocol
 var uuid: String { get }
 var name: String { get }
 var templateFolder: FolderProtocol { get }
 var outputFolder: FolderProtocol { get }
 var sourcesFolders: [FolderProtocol] { get }
 var individualSourceFiles: [File]? { get }
 var sourceryAutoProtocolsFile: FileProtocol { get }
 var sourceryYMLFile: FileProtocol { get }
 var sourceryBuilder: SourceryBuilderProtocol { get set }
 var imports: Set<TemplatePrepend> { get }

 init(
   productName: String,
   swiftPackageDependencies: DependencyProtocol,
   swiftPackageDump: DumpProtocol,
   sourceryBuilder: SourceryBuilderProtocol,
   signPost: SignPostProtocol
 )  throws
 mutating func executableFile() throws  -> FileProtocol
 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for Sourcery ✅
 // types.implementing.AutoGenerateProtocol inline for SourceryBuilder ..
 // sourcery:inline:SourceryBuilder.AutoGenerateProtocol
 static var executalbeFolderPath: String { get }

 func templateFolder() throws  -> FolderProtocol
 func sourceryAutoProtocolFile() throws  -> FileProtocol
 func dependencies() throws  -> DependencyProtocol
 func attemptToBuildSourceryIfNeeded() throws  -> FileProtocol
 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for SourceryBuilder ✅
 // types.implementing.AutoGenerateProtocol inline for SourceryWorker ..
 // sourcery:inline:SourceryWorker.AutoGenerateProtocol
 var name: String { get }
 var sourceryYMLFile: FileProtocol { get }

 init(
   sourcery: SourceryProtocol,
   terminal: TerminalProtocol,
   signPost: SignPostProtocol,
   queue: HighwayDispatchProtocol
 )
 func attempt(in folder: FolderProtocol, _ async: @escaping (@escaping SourceryWorker.SyncOutput) -> Void)
 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for SourceryWorker ✅
 // types.implementing.AutoGenerateProtocol inline for TemplatePrepend ..
 // sourcery:inline:TemplatePrepend.AutoGenerateProtocol
 var names: Set<TemplatePrepend.Import> { get }
 var template: String { get }

 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for TemplatePrepend ✅
 // types.implementing.AutoGenerateProtocol inline for TemplatePrepend.Import ..
 // sourcery:inline:TemplatePrepend.Import.AutoGenerateProtocol
 var name: String { get }
 var testable: Bool { get }

 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for TemplatePrepend.Import ✅

 */
