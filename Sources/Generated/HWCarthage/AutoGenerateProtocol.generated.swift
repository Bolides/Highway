// Generated using Sourcery 0.15.0 — https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT


//: Do not change this code as it is autogenerated every time you build.
//: You can change the code in `../StencilTemplatesForSourcery/Application/AutoGenerateProtocol
import Foundation

// MARK: - AutoGenerateProtocol
//: From all Types implementing this protocol Sourcery adds:
//: - public/internal variables // private variables are ignored
//: - public/internal methods (skips initializers)
//: - initializers marked with annotation // sourcery:includeInitInProtocol
//: - of the above it does not add it if  // sourcery:skipProtocol
//: ---

// version 5.5
/*




// types.implementing.AutoGenerateProtocol inline for CarthageBuilder ..
    // sourcery:inline:CarthageBuilder.AutoGenerateProtocol
    static var carthageExecutableFolderPath: String { get }
    static var carthageExecutableName: String { get }

    func attemptBuildCarthageIfNeeded() throws  -> FileProtocol
    // sourcery:end
// types.implementing.AutoGenerateProtocol inline for CarthageBuilder ✅
// types.implementing.AutoGenerateProtocol inline for HWCarthage ..
    // sourcery:inline:HWCarthage.AutoGenerateProtocol
    static var queue: HighwayDispatchProtocol { get }

    func attemptRunCarthageIfCommandLineOptionAdded(in folder: FolderProtocol, _ async: @escaping (@escaping HWCarthage.SyncOutput) -> Void)
    // sourcery:end
// types.implementing.AutoGenerateProtocol inline for HWCarthage ✅


*/
