// Generated using Sourcery 0.15.0 — https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

//: Do not change this code as it is autogenerated every time you build.
//: You can change the code in `../StencilTemplatesForSourcery/Application/AutoGenerateProtocol
import Foundation

// MARK: - AutoGenerateProtocol

//: From all Types implementing this protocol Sourcery adds:
//: - public/internal variables // private variables are ignored
//: - public/internal methods (skips initializers)
//: - initializers marked with annotation // sourcery:includeInitInProtocol
//: - of the above it does not add it if  // sourcery:skipProtocol
//: ---

// version 5.5
/*

 // types.implementing.AutoGenerateProtocol inline for DependencyService ..
 // sourcery:inline:DependencyService.AutoGenerateProtocol

 func generateDependency() throws  -> DependencyProtocol
 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for DependencyService ✅
 // types.implementing.AutoGenerateProtocol inline for DumpService ..
 // sourcery:inline:DumpService.AutoGenerateProtocol

 func generateDump() throws  -> DumpProtocol
 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for DumpService ✅
 // types.implementing.AutoGenerateProtocol inline for System ..
 // sourcery:inline:System.AutoGenerateProtocol
 static var shared: SystemProtocol { get }
 static var brewPath: String { get set }
 var pathEnvironmentParser: PathEnvironmentParserProtocol { get }
 var fileSystem: FileSystemProtocol { get }

 func rbenvProcess(in folder: FolderProtocol) throws  -> ProcessProtocol
 func gemProcess(name: String, in folder: FolderProtocol) throws  -> ProcessProtocol
 func installOfFindGem(name: String, in folder: FolderProtocol) throws  -> ProcessProtocol
 func processFromBrew(formula: String, in folder: FolderProtocol) throws  -> ProcessProtocol
 func installOrGetProcessFromBrew(formula: String, in folder: FolderProtocol) throws  -> ProcessProtocol
 // sourcery:Will throw error if the formula is not installed when you run this process
 func brewListProcess(for formula: String, in folder: FolderProtocol) throws  -> ProcessProtocol
 func process(_ executableName: String) throws  -> ProcessProtocol
 func process(currentFolder: FolderProtocol, executablePath: String) throws  -> ProcessProtocol
 func process(currentFolder: FolderProtocol, executableFile: FileProtocol) throws  -> ProcessProtocol
 func executable(with executableName: String) throws  -> FileProtocol
 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for System ✅
 // types.implementing.AutoGenerateProtocol inline for Task ..
 // sourcery:inline:Task.AutoGenerateProtocol
 var name: String { get }
 var executable: FileProtocol { get set }
 var arguments: Arguments { get set }
 var input: Channel { get set }
 var output: Channel { get set }
 var capturedOutputData: Data? { get }
 var readOutputString: String? { get }
 var trimmedOutput: String? { get }
 var capturedOutputString: String? { get }
 var toProcess: ProcessProtocol { get }
 var description: String { get }

 func enableReadableOutputDataCapturing()
 // sourcery:end
 // types.implementing.AutoGenerateProtocol inline for Task ✅

 */
