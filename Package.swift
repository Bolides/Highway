// swift-tools-version:4.2
// The swift-tools-version declares the minimum version of Swift required to build this package.

import PackageDescription

let package = Package(
    name: "Highway",
    products: [
        // Products define the executables and libraries produced by a package, and make them visible to other packages.
        .library(
            name: "Errors",
            targets: ["Errors"]),
        .library(
            name: "Arguments",
            targets: ["Arguments"]),
        .library(
            name: "ArgumentsMock",
            targets: ["ArgumentsMock"]),
        .library(
            name: "Url",
            targets: ["Url"]),
        .library(
            name: "POSIX",
            targets: ["POSIX"]),
        .library(
            name: "XCBuild",
            targets: ["XCBuild"]),
        .library(
            name: "XCBuildMock",
            targets: ["XCBuildMock"]),
        .library(
            name: "Terminal",
            targets: ["Terminal"]),
        .library(
            name: "TerminalMock",
            targets: ["TerminalMock"]),
        .library(
            name: "Git",
            targets: ["Git"]),
        .library(
            name: "SourceryWorker",
            targets: ["SourceryWorker"]),
        .library(
            name: "SourceryWorkerMock",
            targets: ["SourceryWorkerMock"]),
        .library(
            name: "SwiftFormatWorker",
            targets: ["SwiftFormatWorker"]),
        .library(
            name: "SwiftFormatWorkerMock",
            targets: ["SwiftFormatWorkerMock"]),

    ],
    dependencies: [
        // Dependencies declare other packages that this package depends on.
        .package(url: "https://www.github.com/doozMen/ZFile", from: "2.0.1"),
        .package(url: "https://www.github.com/doozMen/SignPost", from: "1.0.0"),
        .package(url: "https://www.github.com/doozMen/template-sourcery", from: "1.2.0"),
        .package(url: "https://www.github.com/antitypical/Result", from: "4.0.0"),
        .package(url: "https://www.github.com/Quick/Quick", from: "2.0.0"),
        .package(url: "https://www.github.com/Quick/Nimble", from: "8.0.0"),
        .package(url: "https://github.com/nicklockwood/SwiftFormat", from: "0.39.4"),
        ],
    targets: [
        // Targets are the basic building blocks of a package. A target can define a module or a test suite.
        // Targets can depend on other targets in this package, and on products in packages which this package depends on.
        .target(
            name: "Errors",
            dependencies: ["SourceryAutoProtocols"],
            path: "Sources/highway/Sources/Errors"
        ),
        .target(
            name: "Arguments",
            dependencies: ["SourceryAutoProtocols", "ZFile", "SignPost"],
            path: "Sources/highway/Sources/Arguments"
        ),
        .target(
            name: "ArgumentsMock",
            dependencies: ["SourceryAutoProtocols", "ZFile", "ZFileMock", "SignPost", "Arguments"],
            path: "Sources/highway/Sources/AutoGeneratedCode/Arguments"
        ),
        .target(
            name: "Url",
            dependencies: [],
            path: "Sources/highway/Sources/Url"
        ),
        .target(
            name: "POSIX",
            dependencies: ["Url"],
            path: "Sources/highway/Sources/POSIX"
        ),
        .testTarget(
            name: "POSIXTests",
            dependencies: ["POSIX", "Quick", "Nimble"],
            path: "Sources/highway/Tests/POSIXTests"
        ),
        .target(
            name: "XCBuild",
            dependencies: ["Arguments", "Errors", "Url", "POSIX", "Terminal", "Result"],
            path: "Sources/highway/Sources/XCBuild"
        ),
        .testTarget(
            name: "XCBuildTests",
            dependencies: ["XCBuild", "XCBuildMock", "TerminalMock", "Quick", "Nimble"],
            path: "Sources/highway/Tests/XCBuildTests"
        ),
        .target(
            name: "XCBuildMock",
            dependencies: ["ZFile", "ZFileMock", "XCBuild", "Arguments", "SignPost"],
            path: "Sources/highway/Sources/AutoGeneratedCode/XCBuild"
        ),
        .target(
            name: "Terminal",
            dependencies: ["POSIX", "Arguments"],
            path: "Sources/highway/Sources/Terminal"
        ),
        .testTarget(
            name: "TerminalTests",
            dependencies: ["Terminal", "Quick", "Nimble"],
            path: "Sources/highway/Tests/TerminalTests"
        ),
        .target(
            name: "TerminalMock",
            dependencies: ["Terminal", "ZFile", "ZFileMock", "Arguments", "SourceryAutoProtocols"],
            path: "Sources/highway/Sources/AutoGeneratedCode/Terminal"
        ),
        .target(
            name: "Git",
            dependencies: ["Terminal", "Url", "Arguments", "Errors"],
            path: "Sources/highway/Sources/Git"
        ),
        .testTarget(
            name: "GitTests",
            dependencies: ["Git", "Quick", "Nimble"],
            path: "Sources/highway/Tests/GitTests"
        ),
        .target(
            name: "SourceryWorker",
            dependencies: ["Terminal"],
            path: "Sources/highway/Sources/SourceryWorker"
        ),
        .target(
            name: "SourceryWorkerMock",
            dependencies: ["SourceryWorker"],
            path: "Sources/highway/Sources/AutoGeneratedCode/SourceryWorker"
        ),
        .testTarget(
            name: "SourceryWorkerTests",
            dependencies: ["SourceryWorker", "Quick", "Nimble"],
            path: "Sources/highway/Tests/SourceryWorkerTests"
        ),
        .target(
            name: "SwiftFormatWorker",
            dependencies: ["Errors", "Arguments", "FoundationGenericHelper", "ZFile", "SwiftFormat"],
            path: "Sources/highway/Sources/SwiftFormatWorker"
        ),
        .target(
            name: "SwiftFormatWorkerMock",
            dependencies: ["SwiftFormatWorker"],
            path: "Sources/highway/Sources/AutoGeneratedCode/SwiftFormatWorker"
        ),
        .testTarget(
            name: "SwiftFormatWorkerTests",
            dependencies: ["SwiftFormatWorker", "SwiftFormatWorkerMock", "Quick", "Nimble"],
            path: "Sources/highway/Tests/SwiftFormatWorkerTests"
        )
    ]
)
